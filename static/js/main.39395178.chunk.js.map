{"version":3,"sources":["assets/images/logo.svg","constants/index.js","sharedView/inputFields/inputFieldView.jsx","sharedView/preloader/preloaderView.jsx","sharedView/buttons/buttonView.js","dataObject/loginForm.js","login/loginComponentView.jsx","modules/validations.js","serivces/httpService.js","modules/storage.js","modules/authentication.js","login/LoginComponent.jsx","search/searchComponentView.jsx","search/SearchComponent.jsx","detail/detailComponentView.jsx","detail/DetailComponent.jsx","header/headerComponentView.jsx","hoc/checkIfUserLoginHoc.jsx","serviceWorker.js","reducers/commonReducers.js","store/index.js","index.js","init/initComponentView.jsx"],"names":["module","exports","Constants","FORM","INPUT_FIELD","BUTTON_FIELD","SERVICE_URLS","USERS","PLANETS","THIRD_PARTY_API_HOST","ACTIONS","ADD_PLANET_DATA","ROUTES","LOGIN","SEARCH","DETAIL","NOT_FOUND","inputFieldView","props","id","name","value","placeHolder","type","label","errorMessage","onChange","className","isEmpty","htmlFor","placeholder","autoComplete","randomId","shortid","generate","defaultProps","preloader","width","version","xmlns","xmlnsXlink","x","y","viewBox","enableBackground","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","values","repeatCount","begin","buttonView","disabled","showPreloader","_buttonClass","push","join","loginForm","fieldsOrder","filedsData","userName","viewType","isRequired","isValid","validations","password","submit","loginComponentView","onSubmit","notValidUserErrorMessage","printField","payload","fieldValues","canLogin","isFetching","_fields","forEach","field","rest","key","allFieldValidation","isValidated","axiosCancel","axios","requestId","fetch","get","url","requestPayload","callbackHandler","params","then","response","data","results","catch","cancel","_storage","window","sessionStorage","storage","set","setItem","JSON","stringify","_output","getItem","parse","delete","removeItem","authentication","usersList","auth","_isValid","user","birth_year","_userName","trim","toLower","_password","LoginComponent","event","currentTarget","_state","cloneDeep","state","setState","preventDefault","fetchUserData","search","usersSuccessHandler","_unAuthMessage","redirect","this","React","Component","searchComponentView","searchValue","view","disabledSearch","Fragment","printPlanetsList","planets","goToDetailPage","map","planet","population","_classNames","onClick","path","SearchComponent","_selectedItem","find","addPlanetData","fetchPlanetsData","searchTimeCounter","planetsSuccessHandler","searchCounter","debounce","bind","userInfo","_counter","setTimeout","clearTimeout","connect","dispatch","detailComponentView","planetData","climate","gravity","terrain","diameter","DetailComponent","commonData","headerComponentView","userLogout","to","src","logo","alt","checkIfUserLoginHoc","WrapperView","redirectToPage","canRedirect","redirectPath","date","match","Boolean","location","hostname","defaultState","rootReducers","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,mVC6B5BC,EARG,CACdC,KAtBiB,CACjBC,YAAa,aACbC,aAAc,UAqBdC,aAlBgB,CAChBC,MAAO,UACPC,QAAS,YAiBTC,qBAAsB,wBACtBC,QAfY,CACZC,gBAAiB,2BAejBC,OAZW,CACXC,MAAO,IACPC,OAAQ,UACRC,OAAQ,UACRC,UAAW,e,8CCbFC,EAAiB,SAAEC,GAAY,IAEhCC,EAAsED,EAAtEC,GAAIC,EAAkEF,EAAlEE,KAAMC,EAA4DH,EAA5DG,MAAOC,EAAqDJ,EAArDI,YAAaC,EAAwCL,EAAxCK,KAAMC,EAAkCN,EAAlCM,MAAOC,EAA2BP,EAA3BO,aAAcC,EAAaR,EAAbQ,SAEjE,OACI,8BAAUC,UAAS,mBAAgBC,kBAASH,GAAiB,GAAK,oBAC5DG,kBAASJ,GAAU,KAAO,2BAAOK,QAAUV,EAAKQ,UAAU,mBAAoBH,GAChF,2BACIL,GAAKA,EACLC,KAAOA,EACPU,YAAcR,EACdC,KAAOA,EACPI,UAAU,kBACVN,MAAQA,EACRK,SAAWA,EACXK,aAAa,QAEfH,kBAASH,GAAiB,KAAO,yBAAKE,UAAU,qBAAsBF,KAM9EO,EAAWC,IAAQC,WAEzBjB,EAAekB,aAAe,CAC1BV,aAAc,GACdH,YAAa,GACbC,KAAM,OACNC,MAAO,GACPL,GAAIa,EACJZ,KAAMY,GClCH,IAAMI,EAAY,WACrB,OACI,yBAAKC,MAAM,OAAOC,QAAQ,MAAMnB,GAAG,KAAKoB,MAAM,6BAA6BC,WAAW,+BAA+BC,EAAE,MAAMC,EAAE,MAAMC,QAAQ,YAAYC,iBAAiB,cAAcC,SAAS,YAC7L,4BAAQC,KAAK,UAAUC,OAAO,OAAOC,GAAG,IAAIC,GAAG,IAAIC,EAAE,KACjD,6BAASC,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,SAE5F,4BAAQT,KAAK,UAAUC,OAAO,OAAOC,GAAG,KAAKC,GAAG,IAAIC,EAAE,KAClD,6BAASC,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,SAE5F,4BAAQT,KAAK,UAAUC,OAAO,OAAOC,GAAG,KAAKC,GAAG,IAAIC,EAAE,KAClD,6BAASC,cAAc,UAAUC,IAAI,KAAKC,OAAO,QAAQC,YAAY,aAAaC,MAAM,WCR3FC,G,MAAa,SAAEtC,GAAY,IAE5BK,EAAyCL,EAAzCK,KAAMC,EAAmCN,EAAnCM,MAAOiC,EAA4BvC,EAA5BuC,SAAUC,EAAkBxC,EAAlBwC,cAEzBC,EAAe,CAAE,8BAMvB,OAJIF,GACAE,EAAaC,KAAM,iBAGnBF,EAEI,4BAAQ/B,UAAU,2CAA2C8B,SAAWA,EAAWlC,KAAK,UAAS,kBAAC,EAAD,OAKrG,4BAAQI,UAAYgC,EAAaE,KAAM,KAAQJ,SAAWA,EAAWlC,KAAOA,GAASC,KAK7FgC,EAAWrB,aAAe,CACtBsB,UAAU,EACVC,eAAe,GC3BZ,IAAMI,EAAY,CACrBC,YAAa,CAAE,WAAY,WAAY,UACvCC,WAAY,CACRC,SAAU,CACNC,SAAUhE,EAAUC,KAAKC,YACzBe,GAAI,WACJC,KAAM,WACNE,YAAa,mBACbC,KAAM,OACN4C,YAAY,EACZ3C,MAAO,YACP4C,SAAS,EACT/C,MAAO,GACPgD,YAAa,IAEjBC,SAAU,CACNJ,SAAUhE,EAAUC,KAAKC,YACzBe,GAAI,WACJC,KAAM,WACNE,YAAa,mCACbC,KAAM,WACNC,MAAO,WACPH,MAAO,GACP8C,YAAY,EACZC,SAAS,EACTC,YAAa,IAEjBE,OAAQ,CACJL,SAAUhE,EAAUC,KAAKE,aACzBc,GAAI,WACJC,KAAM,SACNG,KAAM,SACN4C,YAAY,EACZC,SAAS,EACT5C,MAAO,WC3BNgD,EAAqB,SAAEtD,GAAY,IAEpCuD,EAAuCvD,EAAvCuD,SAAUC,EAA6BxD,EAA7BwD,yBAElB,OACI,yBAAK/C,UAAU,eACX,yBAAKA,UAAU,qBAAf,WACEC,kBAAS8C,GAA6B,KAAO,yBAAK/C,UAAU,6BAA8B+C,GAC5F,yBAAK/C,UAAU,qBACX,0BAAM8C,SAAWA,GACXE,EAAYzD,OAQ5ByD,EAAa,SAAEC,GAAc,IAEvBlD,EAAgDkD,EAAhDlD,SAAUmD,EAAsCD,EAAtCC,YAAaC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,WACjChB,EAAgBD,EAAhBC,YAEFiB,EAAU,GAqBhB,OAnBAjB,EAAYkB,SAAS,SAAEC,GAAY,IAAD,EAEAL,EAAaK,GAAnChB,EAFsB,EAEtBA,SAAaiB,EAFS,4BAI1BjF,EAAUC,KAAKC,cAAgB8D,EAE/Bc,EAAQpB,KACJ,kBAAC,EAAD,iBAAqBuB,EAArB,CAA4BzD,SAAWA,EAAW0D,IAAMF,MAGrDhF,EAAUC,KAAKE,eAAiB6D,GAEvCc,EAAQpB,KACJ,kBAAC,EAAD,iBAAiBuB,EAAjB,CAAwB1B,UAAaqB,EAAYM,IAAMF,EAAQxB,cAAgBqB,SAMpFC,GClDEK,EAAqB,SAAET,GAEhC,IAAIU,GAAc,EAElB,IAAK,IAAMJ,KAASN,EAEhB,IAAMA,EAASM,GAAQd,QAAU,CAC7BkB,GAAc,EACd,MAKR,OAAOA,GAIEjB,EAAc,SAAC,GAA+B,EAA5B9C,KAA6B,IAAvBF,EAAsB,EAAtBA,MAEjC,OAFuD,EAAfuD,QAE5BT,YAAcvC,kBAASP,GAExB,CACHI,aAAc,+BACd2C,SAAS,GAKV,CACH3C,aAAc,GACd2C,SAAS,I,+BC3BjBmB,GAAaC,KAEb,IAAMC,EAAYxD,IAAQC,WAEbwD,EAAQ,CACjBC,IADiB,YACqC,IAA/CC,EAA8C,EAA9CA,IAA8C,IAAzCC,sBAAyC,MAAxB,GAAwB,EAApBC,EAAoB,EAApBA,gBAC7BN,IAAMG,IAAN,UAAczF,EAAUO,sBAAxB,OAA+CmF,GAAO,CAAEG,OAAQF,EAAgBJ,cAAcO,MAAM,SAAEC,GAClGH,EAAiB,CAAEI,KAAMD,EAASC,KAAKC,aACvCC,OAAO,WACPN,EAAiB,CAAEI,KAAM,UAKrCV,IAAMa,OAAQZ,GCnBd,IAAMa,EAAWC,OAAOC,eAGXC,EAAU,CACnBC,IADmB,YACoB,IAAD,IAA/BtB,WAA+B,MAHtB,WAGsB,EAATD,EAAS,uBAClCmB,EAASK,QAASvB,EAAKwB,KAAKC,UAAW1B,KAE3CQ,IAJmB,WAKf,IAAMmB,EAAUR,EAASS,QAPb,YAQZ,OAAOH,KAAKI,MAAOF,IAEvBG,OARmB,WASfX,EAASY,WAXG,cCEPC,EAAiB,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,KACrCC,GAAW,EAEf,IAAK,IAAMC,KAAQH,EAAY,CAAC,IAAD,EAEEA,EAAWG,GAAhCnG,EAFmB,EAEnBA,KAAMoG,EAFa,EAEbA,WAERC,EAAcC,eAAMC,kBAASN,EAAKpD,aAAiByD,eAAMC,kBAASvG,IAClEwG,EAAcF,eAAMC,kBAASN,EAAK/C,aAAiBoD,eAAMC,kBAASH,IAExE,GAAIC,GAAaG,EAAY,CAEzBnB,EAAQC,IAAK,CACTzC,SAAU7C,EACVkD,SAAUkD,IAGdF,GAAW,EACX,OAKR,OAAOA,G,6jBC+DIO,E,YA/EX,WAAa3G,GAAS,IAAD,8BACjB,4CAAOA,KAsBXQ,SAAW,SAAEoG,GAAY,IAAD,EACUA,EAAMC,cAA5B1G,EADY,EACZA,MAAOD,EADK,EACLA,KAAMG,EADD,EACCA,KACfyG,EAASC,oBAAW,EAAKC,OAC/BF,EAAOnD,YAAazD,GAApB,KACO4G,EAAOnD,YAAazD,GAD3B,CAEIC,SACGgD,EAAa,CAAE9C,OAAMF,QAAOuD,QAASoD,EAAOnD,YAAazD,MAEhE4G,EAAOlD,SAAWO,EAAoB2C,EAAOnD,aAC7CmD,EAAOtD,yBAA2B,GAClC,EAAKyD,SAAUH,IAjCE,EAoCrBvD,SAAW,SAAEqD,GACTA,EAAMM,iBACN,EAAKD,SAAU,CAAEpD,YAAY,GAAQ,EAAKsD,gBAtCzB,EAyCrBA,cAAgB,WAEZ3C,EAAMC,IAAK,CACPC,IAAK1F,EAAUI,aAAaC,MAC5BsF,eAAgB,CACZyC,OAAQX,kBAAS,EAAKO,MAAMrD,YAAYZ,SAAS5C,QAErDyE,gBAAiB,EAAKyC,uBAhDT,EAoDrBA,oBAAsB,SAAEtC,GAAe,IAAD,EAEH,EAAKiC,MAAMrD,YAAlCZ,EAF0B,EAE1BA,SAAUK,EAFgB,EAEhBA,SACZgD,EAAWH,EAAgB,CAC7BC,UAAWnB,EAASC,KACpBmB,KAAM,CACFpD,SAAUA,EAAS5C,MACnBiD,SAAUA,EAASjD,SAIvBmH,EAAiB,GACflB,IACFkB,EAAiB,8CAGrB,EAAKL,SAAU,CAAEpD,YAAY,EAAOL,yBAA0B8D,IAAkB,WAExElB,GACA,EAAKpG,MAAMuH,SAAUvI,EAAUU,OAAOE,YArE9C,EAAKoH,MAAQ,CACTrD,YAAY,EAAD,GACJf,EAAUE,YAEjBc,SAAUO,EAAoBvB,EAAUE,YACxCe,YAAY,EACZL,yBAA0B,IARb,E,sEAcjB,OACI,kBAAC,EAAD,iBACSgE,KAAKR,MADd,CAEIxG,SAAWgH,KAAKhH,SAChB+C,SAAWiE,KAAKjE,gB,GAnBHkE,IAAMC,W,QCFtBC,G,MAAsB,SAAE3H,GAAY,IAErCQ,EAA0CR,EAA1CQ,SAAUoH,EAAgC5H,EAAhC4H,YAEdC,EAAO,KA4BX,OAzBIA,EAL8C7H,EAAnB8H,eAMvB,yBAAKrH,UAAU,yBAAf,4BAC6B,kDAD7B,wEACiI,6BADjI,sEAOA,kBAAC,IAAMsH,SAAP,KACI,yBAAKtH,UAAU,sBACX,kBAAC,EAAD,CACIL,YAAY,iBACZI,SAAWA,EACXL,MAAQyH,KAGhB,yBAAKnH,UAAU,sBACX,wBAAIA,UAAU,gBACRuH,EAAkBhI,MAQpC,yBAAKS,UAAU,aACX,yBAAKA,UAAU,gBAAiBoH,MAMtCG,EAAmB,SAAEtE,GAAc,IAE7BuE,EAAwCvE,EAAxCuE,QAASC,EAA+BxE,EAA/BwE,eAElB,OAFiDxE,EAAfG,WAIzB,yBAAKpD,UAAU,gCAA+B,kBAAC,EAAD,OAE5CC,kBAASuH,GAEX,yBAAKxH,UAAU,gCAAf,mBAMDwH,EAAQE,KAAK,SAAEC,GAAa,IAEvBlI,EAAqBkI,EAArBlI,KAAMmI,EAAeD,EAAfC,WAERC,EAAc,CAAE,sBAgBtB,OAdID,EAAa,gBAEbC,EAAY5F,KAAM,6BAEX2F,EAAa,aAEpBC,EAAY5F,KAAM,2BAEX2F,EAAa,YAEpBC,EAAY5F,KAAM,6BAKlB,wBAAIjC,UAAY6H,EAAY3F,KAAM,KAAQuB,IAAMhE,EAAOqI,QAAU,WAC7DL,EAAgB,CAAEM,KAAK,GAAD,OAAKxJ,EAAUU,OAAOG,OAAtB,YAAgC4G,kBAAQvG,IAASA,WAEvE,8BAAQA,QChFlBuI,E,YACF,WAAazI,GAAS,IAAD,8BACjB,4CAAOA,KAyBXkI,eAAiB,YAAuB,IAAnBM,EAAkB,EAAlBA,KAAMtI,EAAY,EAAZA,KAEjBwI,EAAgB,EAAK1B,MAAMiB,QAAQU,MAAM,SAAEP,GAC7C,OAAOA,EAAOlI,OAASA,KAE3B,EAAKF,MAAM4I,cAAeF,GAC1B,EAAK1I,MAAMuH,SAAUiB,IAhCJ,EAmCrBhI,SAAW,SAAEoG,GAAY,IACbzG,EAAUyG,EAAMC,cAAhB1G,MACR,EAAK8G,SAAU,CAAEW,YAAazH,IAAS,WAC7BO,kBAAS8F,eAAM,EAAKQ,MAAMY,cAI5B,EAAKX,SAAU,CAAEgB,QAAS,MAH1B,EAAKY,mBACL,EAAKC,yBAxCI,EAuErBC,sBAAwB,SAAEhE,GACtB,EAAKkC,SAAU,CAAEpD,YAAY,EAAOoE,QAASlD,EAASC,QAtEtD,EAAKgC,MAAQ,CACTnD,YAAY,EACZ+D,YAAa,GACboB,cAAe,EACff,QAAS,IAEb,EAAKY,iBAAmBI,mBAAU,EAAKJ,iBAAiBK,KAAtB,gBAAoC,KARrD,E,sEAWX,IAEEnG,EAAayE,KAAKxH,MAAMmJ,SAAxBpG,SAFH,EAG8ByE,KAAKR,MAAhCgC,EAHH,EAGGA,cAAkB/E,EAHrB,iCAKL,OACI,kBAAC,EAAD,iBACSA,EADT,CAEIzD,SAAWgH,KAAKhH,SAChB0H,eAAiBV,KAAKU,eACtBJ,eAA8B,mBAAb/E,GAAmC,KAAOiG,O,yCA0BnD,IAAD,OAEfxB,KAAKP,SAAU,CAAEpD,YAAY,EAAMmF,cAAexB,KAAKR,MAAMgC,cAAgB,IAAK,WAC9ExE,EAAMC,IAAK,CACPC,IAAK1F,EAAUI,aAAaE,QAC5BqF,eAAgB,CACZyC,OAAQ,EAAKJ,MAAMY,aAEvBhD,gBAAiB,EAAKmE,6B,0CAKb,IAAD,OAEVK,EAAWC,YAAY,WACzB,EAAKpC,SAAU,CAAE+B,cAAe,MACjC,KAEC,KAAOxB,KAAKR,MAAMgC,eAClBM,aAAcF,O,GApEI3B,IAAMC,WAsFrB6B,cAAS,MARG,SAAEC,GAEzB,MAAO,CACHZ,cAAe,SAAElF,GAAF,OAAe8F,EAAU,CAAEnJ,KAAMrB,EAAUQ,QAAQC,gBAAiBuF,KAAMtB,QAKlF6F,CAAoCd,GCzFtCgB,G,MAAsB,SAAEzJ,GAAY,IAErC0J,EAAyB1J,EAAzB0J,WAAYnC,EAAavH,EAAbuH,SACZrH,EAA0DwJ,EAA1DxJ,KAAMmI,EAAoDqB,EAApDrB,WAAYsB,EAAwCD,EAAxCC,QAASC,EAA+BF,EAA/BE,QAASC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SAErD,OACI,yBAAKrJ,UAAU,aACX,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,sBACX,yBAAKA,UAAU,6BAAf,gBAA0DP,GAC1D,yBAAKO,UAAU,2BAA2B8H,QAAU,kBAAMhB,EAAUvI,EAAUU,OAAOE,UAArF,SAEJ,yBAAKa,UAAU,sBACX,yBAAKA,UAAU,eACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,4BAAf,WACA,yBAAKA,UAAU,4BAA6BkJ,IAEhD,yBAAKlJ,UAAU,oBACX,yBAAKA,UAAU,4BAAf,WACA,yBAAKA,UAAU,4BAA6BmJ,IAEhD,yBAAKnJ,UAAU,oBACX,yBAAKA,UAAU,4BAAf,WACA,yBAAKA,UAAU,4BAA6BoJ,IAEhD,yBAAKpJ,UAAU,oBACX,yBAAKA,UAAU,4BAAf,YACA,yBAAKA,UAAU,4BAA6BqJ,IAEhD,yBAAKrJ,UAAU,oBACX,yBAAKA,UAAU,4BAAf,cACA,yBAAKA,UAAU,4BAA6B4H,UC9BlE0B,E,4LAGMrJ,kBAAS8G,KAAKxH,MAAM0J,aACpBlC,KAAKxH,MAAMuH,SAAUvI,EAAUU,OAAOE,U,+BAK1C,OACI,kBAAC,EAAD,iBACS4H,KAAKR,MADd,CAEIO,SAAWC,KAAKxH,MAAMuH,SACtBmC,WAAclC,KAAKxH,MAAM0J,kB,GAbXjC,IAAMC,WA0BrB6B,eANS,SAAEvC,GACtB,MAAO,CACH0C,WAAY1C,EAAMgD,WAAWN,cAItBH,CAA2BQ,G,yBC1B7BE,EAAsB,SAAEjK,GAAY,IAErCkK,EAAyBlK,EAAzBkK,WAAYf,EAAanJ,EAAbmJ,SAEpB,OACI,4BAAQ1I,UAAU,UACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAS0J,GAAKnL,EAAUU,OAAOC,OAAQ,yBAAKyK,IAAMC,IAAOlJ,MAAM,OAAOmJ,IAAI,OAAO7J,UAAU,gBAE/F,yBAAKA,UAAU,cACX,wBAAIA,UAAU,oBACV,wBAAKA,UAAU,0BAA2B0I,EAASpG,UACnD,wBAAKtC,UAAU,0BACX,0BAAMA,UAAU,+BAA+B8H,QAAU2B,GAAzD,mBCdnBK,EAAsB,SAAEC,GAEjC,mBAEI,WAAaxK,GAAS,IAAD,8BACjB,4CAAOA,KAoDXkK,WAAa,WACT3E,EAAQQ,SACR,EAAK0E,eAAgBzL,EAAUU,OAAOC,QAvDrB,EA0DrB8K,eAAiB,SAAEjC,GACf,EAAKvB,SAAU,CAAEyD,aAAa,EAAMC,aAAcnC,KAzDlD,EAAKxB,MAAQ,CACT0D,aAAa,EACbC,aAAc,IAElB,EAAKC,KAAO,CACRzB,SAAU5D,EAAQd,OAPL,EAFzB,sEAac,IAEEoG,EAAUrD,KAAKxH,MAAf6K,MAFH,EAGiCrD,KAAKR,MAAnC0D,EAHH,EAGGA,YAAaC,EAHhB,EAGgBA,aACrB,OAAID,EAGI,kBAAC,IAAD,CAAUP,GAAKQ,IAGXjK,kBAAS8G,KAAKoD,KAAKzB,WAAgB0B,EAAMrC,OAASxJ,EAAUU,OAAOC,MAGvE,kBAAC,IAAD,CAAUwK,GAAKnL,EAAUU,OAAOC,QAG1Be,kBAAS8G,KAAKoD,KAAKzB,WAAgB0B,EAAMrC,OAASxJ,EAAUU,OAAOC,MASzE,kBAAC,IAAMoI,SAAP,KACM8C,EAAMrC,OAASxJ,EAAUU,OAAOC,MAAQ,KACtC,kBAAC,EAAD,CACIuK,WAAa1C,KAAK0C,WAClBf,SAAY3B,KAAKoD,KAAKzB,WAG9B,kBAACqB,EAAD,CACI3F,OAASgG,EAAMhG,OACfsE,SAAY3B,KAAKoD,KAAKzB,SACtB5B,SAAWC,KAAKiD,kBAhBxB,kBAAC,IAAD,CAAUN,GAAKnL,EAAUU,OAAOE,aAhChD,GAAsC6H,IAAMC,YCG5BoD,QACW,cAA7BzF,OAAO0F,SAASC,UAEe,UAA7B3F,OAAO0F,SAASC,UAEhB3F,OAAO0F,SAASC,SAASH,MACvB,2D,ykBCjBN,IAAMI,GAAe,CACjBvB,WAAY,I,SCCVwB,GAAeC,YAAiB,CAClCnB,WDC0B,WAAqC,IAAnChD,EAAkC,uDAA1BiE,GAAcG,EAAY,uCAEtD3L,EAAoBT,EAAUQ,QAA9BC,gBACAY,EAAe+K,EAAf/K,KAAM2E,EAASoG,EAATpG,KACd,OAAS3E,GAEL,KAAKZ,EACD,OAAO,MACAuH,EADP,CAEI0C,WAAY1E,IAGpB,QACI,OAAOgC,MCPJqE,GAJDC,YACVJ,GACAK,YAAiBC,OCFrBC,IAASC,OAAQ,kBAAC,IAAD,CAAUL,MAAQA,IAAQ,mBCEV,WAE/B,OACE,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO7C,KAAOxJ,EAAUU,OAAOC,MAAQgM,OAAQ,EAAOC,UAAYrB,EAAqB5D,KACvF,kBAAC,IAAD,CAAO6B,KAAOxJ,EAAUU,OAAOE,OAAS+L,OAAQ,EAAOC,UAAYrB,EAAqB9B,KACxF,kBAAC,IAAD,CAAOD,KAAI,UAAMxJ,EAAUU,OAAOG,OAAvB,QAAsC8L,OAAQ,EAAOC,UAAYrB,EAAqBR,KACjG,kBAAC,IAAD,CAAOvB,KAAK,GAAGmD,OAAQ,EAAQD,OAAS,kBAAO,kBAAC,IAAD,CAAUvB,GAAKnL,EAAUU,OAAOC,eDVhD,OAAkCkM,SAASC,eAAe,SH0H/F,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnH,MAAK,SAAAoH,GACjCA,EAAaC,kB","file":"static/js/main.39395178.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","const formViewType = {\n    INPUT_FIELD: 'inputField',\n    BUTTON_FIELD: 'button'\n};\n\nconst serviceUrls = {\n    USERS: 'people/',\n    PLANETS: 'planets/'\n}; \n\nconst Actions = {\n    ADD_PLANET_DATA: 'PLANTS::ADD_PLANET_DATA'\n};\n\nconst ROUTES = {\n    LOGIN: '/',\n    SEARCH: '/search',\n    DETAIL: '/detail',\n    NOT_FOUND: '/not-found'\n};\n\nconst Constants = {\n    FORM: formViewType,\n    SERVICE_URLS: serviceUrls,\n    THIRD_PARTY_API_HOST: 'https://swapi.co/api/',\n    ACTIONS: Actions,\n    ROUTES: ROUTES\n};\n\nexport default Constants;","import React from 'react';\nimport './style.scss';\nimport shortid from 'shortid';\nimport { isEmpty } from 'lodash';\n\nexport const inputFieldView = ( props ) => {\n    \n    const { id, name, value, placeHolder, type, label, errorMessage, onChange } = props;\n\n    return(\n        <fieldset className={ `fieldset ${ isEmpty( errorMessage ) ? '' : 'fieldset--error' }` }>\n            { isEmpty( label ) ? null : <label htmlFor={ id } className='fieldset__label'>{ label }</label> }\n            <input\n                id={ id }\n                name={ name }\n                placeholder={ placeHolder }\n                type={ type }\n                className=\"fieldset__input\"\n                value={ value }\n                onChange={ onChange }\n                autoComplete='off'\n            />\n            { isEmpty( errorMessage ) ? null : <div className='fieldset__message'>{ errorMessage }</div> }\n        </fieldset>\n    );\n\n};\n\nconst randomId = shortid.generate();\n\ninputFieldView.defaultProps = {\n    errorMessage: '',\n    placeHolder: '',\n    type: 'text',\n    label: '',\n    id: randomId,\n    name: randomId\n};","import React from 'react';\n\nexport const preloader = () => {\n    return(\n        <svg width='50px' version='1.1' id='L4' xmlns='http://www.w3.org/2000/svg' xmlnsXlink='http://www.w3.org/1999/xlink' x='0px' y='0px' viewBox='0 0 63 12' enableBackground='new 0 0 0 0' xmlSpace='preserve'>\n            <circle fill='#3f51b5' stroke='none' cx='6' cy='6' r='6'>\n                <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.1'></animate>\n            </circle>\n            <circle fill='#3f51b5' stroke='none' cx='31' cy='6' r='6'>\n                <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.2'></animate>\n            </circle>\n            <circle fill='#3f51b5' stroke='none' cx='56' cy='6' r='6'>\n                <animate attributeName='opacity' dur='1s' values='0;1;0' repeatCount='indefinite' begin='0.3'></animate>\n            </circle>\n        </svg>\n    );\n};","import React from 'react';\nimport { preloader as Preloader } from '../preloader/preloaderView';\nimport './style.scss';\n\nexport const buttonView = ( props ) => {\n\n    const { type, label, disabled, showPreloader } = props;\n\n    const _buttonClass = [ 'btn btn--block btn--submit' ];\n\n    if( disabled ) {\n        _buttonClass.push( 'btn--disabled' );\n    }\n\n    if( showPreloader ) {\n        return(\n            <button className='btn btn--block btn--submit btn--disabled' disabled={ disabled } type='button'><Preloader /></button>\n        );\n    }\n\n    return(\n        <button className={ _buttonClass.join( ' ' ) } disabled={ disabled } type={ type }>{ label }</button>\n    );\n\n};\n\nbuttonView.defaultProps = {\n    disabled: false,\n    showPreloader: false\n};","import Constants from '../constants/index';\nexport const loginForm = {\n    fieldsOrder: [ 'userName', 'password', 'submit' ],\n    filedsData: {\n        userName: {\n            viewType: Constants.FORM.INPUT_FIELD,\n            id: 'userName',\n            name: 'userName',\n            placeHolder: 'Enter user name.',\n            type: 'text',\n            isRequired: true,\n            label: 'User Name',\n            isValid: false,\n            value: '',\n            validations: []\n        },\n        password: {\n            viewType: Constants.FORM.INPUT_FIELD,\n            id: 'password',\n            name: 'password',\n            placeHolder: 'Enter date of birth as password.',\n            type: 'password',\n            label: 'Password',\n            value: '',\n            isRequired: true,\n            isValid: false,\n            validations: []\n        },\n        submit: {\n            viewType: Constants.FORM.BUTTON_FIELD,\n            id: 'password',\n            name: 'submit',\n            type: 'submit',\n            isRequired: false,\n            isValid: true,\n            label: 'Login',\n        }\n    }\n};","import React from 'react';\nimport './style.scss';\nimport { isEmpty } from 'lodash';\nimport { inputFieldView as InputFieldView } from '../sharedView/inputFields/inputFieldView';\nimport { buttonView as ButtonView } from '../sharedView/buttons/buttonView';\nimport { loginForm } from '../dataObject/loginForm';\nimport Constants from '../constants/index';\n\nexport const loginComponentView = ( props ) => {\n\n    const { onSubmit, notValidUserErrorMessage } = props;\n\n    return(\n        <div className='login__page'>\n            <div className='login__page__head'>Sign In</div>\n            { isEmpty( notValidUserErrorMessage ) ? null : <div className='login__page__errorMessage'>{ notValidUserErrorMessage }</div> }\n            <div className='login__page__body'>\n                <form onSubmit={ onSubmit }>\n                    { printField( props ) }\n                </form>\n            </div>\n        </div>\n    );\n\n};\n\nconst printField = ( payload ) => {\n\n    const { onChange, fieldValues, canLogin, isFetching } = payload;\n    const { fieldsOrder } = loginForm;\n\n    const _fields = [];\n\n    fieldsOrder.forEach( ( field ) => {\n\n        const { viewType, ...rest } = fieldValues[ field ];\n\n        if( Constants.FORM.INPUT_FIELD === viewType ) {\n\n            _fields.push(\n                <InputFieldView { ...rest } onChange={ onChange } key={ field } />\n            );\n\n        } else if( Constants.FORM.BUTTON_FIELD === viewType ) {\n            \n            _fields.push(\n                <ButtonView { ...rest } disabled={ ! canLogin }  key={ field } showPreloader={ isFetching } />\n            );\n        }\n\n    } )\n\n    return _fields;\n\n};\n","import { isEmpty } from 'lodash';\n\nexport const allFieldValidation = ( payload ) => {\n\n    let isValidated = true;\n\n    for( const field in payload ) {\n\n        if( ! payload[ field ].isValid ) {\n            isValidated = false;\n            break;\n        }\n\n    }\n\n    return isValidated;\n\n};\n\nexport const validations = ( { type, value, payload } ) => {\n\n    if( payload.isRequired && isEmpty( value ) ) {\n\n        return {\n            errorMessage: 'Empty field is not Required.',\n            isValid: false\n        }\n\n    }\n\n    return {\n        errorMessage: '',\n        isValid: true\n    };\n\n};","import axios from 'axios';\nimport shortid from 'shortid';\nimport axiosCancel from 'axios-cancel';\nimport Constants from '../constants/index';\n\naxiosCancel( axios );\n\nconst requestId = shortid.generate();\n\nexport const fetch = {\n    get( { url, requestPayload = {}, callbackHandler } ) {\n        axios.get( `${Constants.THIRD_PARTY_API_HOST}${url}`, { params: requestPayload, requestId } ).then( ( response ) => {\n            callbackHandler( { data: response.data.results }  );\n        } ).catch( () => {\n            callbackHandler( { data: [] }  );\n        } );\n    }\n};\n\naxios.cancel( requestId );","const _storage = window.sessionStorage;\nconst _storageKey = 'userInfo';\n\nexport const storage = {\n    set( { key = _storageKey, ...rest } ) {\n        _storage.setItem( key, JSON.stringify( rest ) );\n    },\n    get() {\n        const _output = _storage.getItem( _storageKey );\n        return JSON.parse( _output );\n    },\n    delete() {\n        _storage.removeItem( _storageKey );\n    }\n};","import { storage } from './storage';\nimport { trim, toLower } from 'lodash';\n\nexport const authentication = ( { usersList, auth } ) => {\n    let _isValid = false;\n\n    for( const user in usersList ) {\n\n        const { name, birth_year } = usersList[ user ];\n\n        const _userName = ( trim( toLower( auth.userName ) ) === trim( toLower( name ) ) );\n        const _password = ( trim( toLower( auth.password ) ) === trim( toLower( birth_year ) ) );\n\n        if( _userName && _password ) {\n\n            storage.set( {\n                userName: name,\n                password: birth_year\n            } );\n\n            _isValid = true;\n            break;\n        }\n\n    }\n\n    return _isValid;\n};","import React from 'react';\nimport Constants from '../constants/index';\nimport { cloneDeep, toLower } from 'lodash';\nimport { loginComponentView as LoginComponentView } from './loginComponentView';\nimport { loginForm } from '../dataObject/loginForm';\nimport { validations, allFieldValidation } from '../modules/validations';\nimport { fetch } from '../serivces/httpService';\nimport { authentication  } from '../modules/authentication';\n\nclass LoginComponent extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            fieldValues: {\n                ...loginForm.filedsData,\n            },\n            canLogin: allFieldValidation( loginForm.filedsData ),\n            isFetching: false,\n            notValidUserErrorMessage: ''\n        };\n    }\n\n    render() {\n\n        return(\n            <LoginComponentView\n                { ...this.state }\n                onChange={ this.onChange }\n                onSubmit={ this.onSubmit }\n            />\n        );\n    }\n\n    onChange = ( event ) => {\n        const { value, name, type } = event.currentTarget;\n        const _state = cloneDeep( this.state );\n        _state.fieldValues[ name ] = {\n            ..._state.fieldValues[ name ],\n            value,\n            ...validations( { type, value, payload: _state.fieldValues[ name ] } )\n        };\n        _state.canLogin = allFieldValidation( _state.fieldValues );\n        _state.notValidUserErrorMessage = '';\n        this.setState( _state );\n    }\n\n    onSubmit = ( event ) => {\n        event.preventDefault();\n        this.setState( { isFetching: true }, this.fetchUserData );\n    }\n\n    fetchUserData = () => {\n\n        fetch.get( {\n            url: Constants.SERVICE_URLS.USERS,\n            requestPayload: {\n                search: toLower( this.state.fieldValues.userName.value )\n            },\n            callbackHandler: this.usersSuccessHandler\n        } );\n    }\n\n    usersSuccessHandler = ( response ) => {\n\n        const { userName, password } = this.state.fieldValues;\n        const _isValid = authentication( {\n            usersList: response.data,\n            auth: {\n                userName: userName.value,\n                password: password.value\n            }\n        } );\n\n        let _unAuthMessage = '';\n        if( ! _isValid ) {\n            _unAuthMessage = 'Please enter correct username and password';\n        }\n\n        this.setState( { isFetching: false, notValidUserErrorMessage: _unAuthMessage }, () => {\n\n            if( _isValid ) {\n                this.props.redirect( Constants.ROUTES.SEARCH );\n            }\n\n        } );\n    };\n\n}\n\nexport default LoginComponent;","import React from 'react';\nimport { toLower, isEmpty } from 'lodash';\nimport './style.scss';\nimport { inputFieldView as InputFieldView } from '../sharedView/inputFields/inputFieldView';\nimport Constants from '../constants/index';\nimport { preloader as Preloader } from '../sharedView/preloader/preloaderView';\n\nexport const searchComponentView = ( props ) => {\n\n    const { onChange, searchValue, disabledSearch } = props;\n\n    let view = null;\n\n    if( disabledSearch ) {\n        view = (\n            <div className='search__page__message'>\n                If your username is not \"<strong>Luke Skywalker</strong>\" then you will not be able to search more than 15 times in a minute.<br />\n                If you want to cuntinue search then you need to wait for 1 minute.\n            </div>\n        );\n    } else {\n        view = (\n            <React.Fragment>\n                <div className='search__page__head'>\n                    <InputFieldView\n                        placeHolder='Search here...'\n                        onChange={ onChange }\n                        value={ searchValue }\n                    />\n                </div>\n                <div className='search__page__body'>\n                    <ul className='planet__list'>\n                        { printPlanetsList( props ) }\n                    </ul>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    return(\n        <div className='container'>\n            <div className='search__page'>{ view }</div>\n        </div>\n    );\n\n};\n\nconst printPlanetsList = ( payload ) => {\n\n    const { planets, goToDetailPage, isFetching } = payload;\n\n   if( isFetching ) {\n\n    return( <div className='search__page__body__notfound'><Preloader /></div> );\n\n   } else if( isEmpty( planets ) ) {\n        return(\n            <div className='search__page__body__notfound'>\n                Data not found.\n            </div>\n        );\n    }\n\n    return planets.map( ( planet ) => {\n\n        const { name, population } = planet;\n\n        const _classNames = [ 'planet__list__item' ];\n\n        if( population > '1000000000000' ) {\n\n            _classNames.push( 'planet__list__item--large' );\n\n        } else if( population > '1000000000' ) {\n\n            _classNames.push( 'planet__list__item--mid' );\n\n        } else if( population > '45000000' ) {\n\n            _classNames.push( 'planet__list__item--small' );\n\n        }\n\n        return(\n            <li className={ _classNames.join( ' ' ) } key={ name } onClick={ () => {\n                goToDetailPage( { path: `${Constants.ROUTES.DETAIL}/${toLower(name)}`, name } );\n            } }>\n                <span>{ name }</span>\n            </li>\n        );\n    } );\n\n};\n","import React from 'react';\nimport Constants from '../constants/index';\nimport { isEmpty, trim, debounce } from 'lodash';\nimport { searchComponentView as SearchComponentView } from './searchComponentView';\nimport { fetch } from '../serivces/httpService';\nimport { connect } from 'react-redux';\n\nclass SearchComponent extends React.Component {\n    constructor( props ) {\n        super( props );\n        this.state = {\n            isFetching: false,\n            searchValue: '',\n            searchCounter: 0,\n            planets: []\n        };\n        this.fetchPlanetsData = debounce( this.fetchPlanetsData.bind( this ), 200 );\n    }\n    \n    render() {\n\n        const { userName } = this.props.userInfo;\n        const { searchCounter, ...rest } = this.state;\n\n        return(\n            <SearchComponentView\n                { ...rest }\n                onChange={ this.onChange }\n                goToDetailPage={ this.goToDetailPage }\n                disabledSearch={ userName !== 'Luke Skywalker' && ( 15 === searchCounter ) }\n            />\n        );\n    }\n\n    goToDetailPage = ( { path, name } ) => {\n\n        const _selectedItem = this.state.planets.find( ( planet ) => {\n            return planet.name === name;\n        } );\n        this.props.addPlanetData( _selectedItem );\n        this.props.redirect( path );\n    }\n\n    onChange = ( event ) => {\n        const { value } = event.currentTarget;\n        this.setState( { searchValue: value }, () => {\n            if( ! isEmpty( trim( this.state.searchValue ) ) ) {\n                this.fetchPlanetsData();\n                this.searchTimeCounter();\n            } else {\n                this.setState( { planets: [] } );\n            }\n        } );\n    }\n\n    fetchPlanetsData() {\n\n        this.setState( { isFetching: true, searchCounter: this.state.searchCounter + 1 }, () => {\n            fetch.get( {\n                url: Constants.SERVICE_URLS.PLANETS,\n                requestPayload: {\n                    search: this.state.searchValue\n                },\n                callbackHandler: this.planetsSuccessHandler\n            } );\n        } );\n    }\n\n    searchTimeCounter() {\n\n        const _counter = setTimeout( () => {\n            this.setState( { searchCounter: 0 } );\n        }, 1000 * 60 );\n            \n        if( 15 === this.state.searchCounter  ) {\n            clearTimeout( _counter );\n        }\n    }\n\n    planetsSuccessHandler = ( response ) => {\n        this.setState( { isFetching: false, planets: response.data } );\n    };\n\n}\n\nconst mapDispatchToProps = ( dispatch ) => {\n\n    return {\n        addPlanetData: ( payload ) => dispatch( { type: Constants.ACTIONS.ADD_PLANET_DATA, data: payload } )\n    };\n\n};\n\nexport default connect( null, mapDispatchToProps )(SearchComponent);","import React from 'react';\nimport './style.scss';\nimport Constants from '../constants/index';\n\nexport const detailComponentView = ( props ) => {\n\n    const { planetData, redirect } = props;\n    const { name, population, climate, gravity, terrain, diameter } = planetData;\n\n    return(\n        <div className='container'>\n            <div className='detail__page'>\n                <div className='detail__page__head'>\n                    <div className='detail__page__head__title'>Planet Name: { name }</div>\n                    <div className='detail__page__head__link' onClick={ () => redirect( Constants.ROUTES.SEARCH ) }>Back</div>\n                </div>\n                <div className='detail__page__body'>\n                    <div className='planetsInfo'>\n                        <div className='planetsInfo__row'>\n                            <div className='planetsInfo__row__column'>Climate</div>\n                            <div className='planetsInfo__row__column'>{ climate }</div>\n                        </div>\n                        <div className='planetsInfo__row'>\n                            <div className='planetsInfo__row__column'>Gravity</div>\n                            <div className='planetsInfo__row__column'>{ gravity }</div>\n                        </div>\n                        <div className='planetsInfo__row'>\n                            <div className='planetsInfo__row__column'>Terrain</div>\n                            <div className='planetsInfo__row__column'>{ terrain }</div>\n                        </div>\n                        <div className='planetsInfo__row'>\n                            <div className='planetsInfo__row__column'>Diameter</div>\n                            <div className='planetsInfo__row__column'>{ diameter }</div>\n                        </div>\n                        <div className='planetsInfo__row'>\n                            <div className='planetsInfo__row__column'>Population</div>\n                            <div className='planetsInfo__row__column'>{ population }</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n\n};\n\n","import React from 'react';\nimport Constants from '../constants/index';\nimport { isEmpty } from 'lodash';\nimport { detailComponentView as DetailComponentView } from './detailComponentView';\nimport { connect } from 'react-redux';\n\nclass DetailComponent extends React.Component {\n\n    componentDidMount() {\n        if( isEmpty( this.props.planetData ) ) {\n            this.props.redirect( Constants.ROUTES.SEARCH );\n        }\n    }\n\n    render() {\n        return(\n            <DetailComponentView\n                { ...this.state }\n                redirect={ this.props.redirect }\n                planetData= { this.props.planetData }\n            />\n        );\n    }\n\n}\n\nconst mapStateToProps = ( state ) => {\n    return {\n        planetData: state.commonData.planetData\n    };\n};\n\nexport default connect( mapStateToProps )(DetailComponent);","import React from 'react';\nimport './style.scss';\nimport { NavLink } from 'react-router-dom';\nimport logo from '../assets/images/logo.svg';\nimport Constants from '../constants/index';\n\nexport const headerComponentView = ( props ) => {\n\n    const { userLogout, userInfo } = props;\n\n    return(\n        <header className='header'>\n            <div className='container'>\n                <div className='header__wrapper'>\n                    <div className='logo'>\n                        <NavLink to={ Constants.ROUTES.LOGIN }><img src={ logo } width='50px' alt='logo' className='logo__img' /></NavLink>\n                    </div>\n                    <nav className='navigation'>\n                        <ul className='navigation__list'>\n                            <li  className='navigation__list__item'>{ userInfo.userName }</li>\n                            <li  className='navigation__list__item'>\n                                <span className='navigation__list__item__link' onClick={ userLogout }>Sign out</span>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n            </div>\n        </header>\n    );\n\n};\n","import React from 'react';\nimport { isEmpty } from 'lodash';\nimport Constants from '../constants/index';\nimport { storage } from '../modules/storage';\nimport { Redirect } from 'react-router-dom';\nimport { headerComponentView as HeaderComponentView } from '../header/headerComponentView';\n\nexport const checkIfUserLoginHoc = ( WrapperView ) => {\n\n    return class checkIfUserLogin extends React.Component {\n\n        constructor( props ) {\n            super( props );\n            this.state = {\n                canRedirect: false,\n                redirectPath: ''\n            };\n            this.date = {\n                userInfo: storage.get()\n            };\n        }\n\n        render() {\n\n            const { match } = this.props;\n            const { canRedirect, redirectPath } = this.state;\n            if( canRedirect ) {\n\n                return(\n                    <Redirect to={ redirectPath } />\n                );\n\n            } else if ( isEmpty( this.date.userInfo ) && ( match.path !== Constants.ROUTES.LOGIN ) ) {\n\n                return(\n                    <Redirect to={ Constants.ROUTES.LOGIN } />\n                );\n\n            } else if ( ! isEmpty( this.date.userInfo ) && ( match.path === Constants.ROUTES.LOGIN ) ) {\n\n                return(\n                    <Redirect to={ Constants.ROUTES.SEARCH } />\n                );\n\n            } else {\n\n                return(\n                    <React.Fragment>\n                        { match.path === Constants.ROUTES.LOGIN ? null :\n                            <HeaderComponentView\n                                userLogout={ this.userLogout }\n                                userInfo= { this.date.userInfo }\n                            />\n                        }\n                        <WrapperView\n                            params={ match.params }\n                            userInfo= { this.date.userInfo }\n                            redirect={ this.redirectToPage }\n                        />\n                    </React.Fragment>\n                );\n            }\n        }\n\n        userLogout = () => {\n            storage.delete();\n            this.redirectToPage( Constants.ROUTES.LOGIN );\n        }\n\n        redirectToPage = ( path ) => {\n            this.setState( { canRedirect: true, redirectPath: path } );\n        }\n\n    }\n\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Constants from '../constants/index';\nconst defaultState = {\n    planetData: {}\n};\n\nexport const commonReducers = ( state = defaultState, action ) => {\n\n    const { ADD_PLANET_DATA } = Constants.ACTIONS;\n    const { type, data } = action;\n    switch ( type ) {\n\n        case ADD_PLANET_DATA : \n            return {\n                ...state,\n                planetData: data\n            };\n\n        default:\n            return state;\n        \n    }\n\n};","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { commonReducers } from '../reducers/commonReducers';\nimport thunk from 'redux-thunk';\nconst rootReducers = combineReducers( {\n    commonData: commonReducers\n} );\n\nconst store = createStore(\n    rootReducers,\n    applyMiddleware( thunk )\n);\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { initComponentView as InitComponentView } from './init/initComponentView';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store/index';\n\nReactDOM.render( <Provider store={ store }><InitComponentView /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './style.scss';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport LoginComponent from '../login/LoginComponent';\nimport SearchComponent from '../search/SearchComponent';\nimport DetailComponent from '../detail/DetailComponent';\nimport { checkIfUserLoginHoc } from '../hoc/checkIfUserLoginHoc';\nimport Constants from '../constants/index';\n\nexport const initComponentView = () => {\n\n  return (\n    <Router>\n        <Switch>\n            <Route path={ Constants.ROUTES.LOGIN } exact={ true } component={ checkIfUserLoginHoc( LoginComponent ) } />\n            <Route path={ Constants.ROUTES.SEARCH } exact={ true } component={ checkIfUserLoginHoc( SearchComponent ) } />\n            <Route path={ `${Constants.ROUTES.DETAIL}/:id` } exact={ true } component={ checkIfUserLoginHoc( DetailComponent ) } />\n            <Route path='' exact={ false } render={ ( ) => <Redirect to={ Constants.ROUTES.LOGIN } /> } />\n        </Switch>\n    </Router>\n  );\n\n};"],"sourceRoot":""}